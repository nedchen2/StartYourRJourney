l2 = prepare$shorter_length)
higher_score_finder <- function(s1,s2,l1,l2){
my_best_score = -1
for (i in seq(length(s1))){
z <- calculate_score(s1, s2, l1, l2, i)
if (z > my_best_score){
#my_best_align = paste(paste(rep(".",i),sep = ""), s2, sep = "") # think about what this is doing!
my_best_score = z
start_point = i
#print (my_best_align)
}
}
print ("=====================Results of alignment=====================")
print(paste("Best score:", my_best_score))
seq1 = paste(s1, collapse = "")
seq2 = paste(s2, collapse = "")
my_best_align = paste(paste(rep(".",start_point), collapse = ""), seq2 , sep = "")
print(seq1)
print(my_best_align)
return(list(my_best_score = my_best_score, start_point = start_point, best_align = my_best_align))
}
seq1 = seq_list[2,2]
seq2 = seq_list[3,2]
prepare <- identify_the_shorter_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
res.align
higher_score_finder <- function(s1,s2,l1,l2){
my_best_score = -1
for (i in seq(length(s1))){
z <- calculate_score(s1, s2, l1, l2, i)
if (z > my_best_score){
#my_best_align = paste(paste(rep(".",i),sep = ""), s2, sep = "") # think about what this is doing!
my_best_score = z
start_point = i
#print (my_best_align)
}else if (z == my_best_score){
my_best_score = z # still identical
start_point = c(i, start_point)
}
}
print ("=====================Results of alignment=====================")
print(paste("Best score:", my_best_score))
seq1 = paste(s1, collapse = "")
seq2 = paste(s2, collapse = "")
my_best_align = paste(paste(rep(".",start_point), collapse = ""), seq2 , sep = "")
print(seq1)
print(my_best_align)
return(list(my_best_score = my_best_score, start_point = start_point, best_align = my_best_align))
}
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
res.align
i = 7
z <- calculate_score(s1, s2, l1, l2, i)
z
s1 = seq1
s2= seq2
z <- calculate_score(s1, s2, l1, l2, i)
calculate_score(s1, s2, l1, l2, i)
s1 = prepare$longer_seq
s2 = prepare$shorter_seq
i = 7
z <- calculate_score(s1, s2, l1, l2, i)
z
my_best_score = -1
if (z > my_best_score){
#my_best_align = paste(paste(rep(".",i),sep = ""), s2, sep = "") # think about what this is doing!
my_best_score = z
start_point = i
#print (my_best_align)
}else if (z == my_best_score){
my_best_score = z # still identical
start_point = c(i, start_point)
}
my_best_score
start_point
i = 8
z <- calculate_score(s1, s2, l1, l2, i)
i = 6
z <- calculate_score(s1, s2, l1, l2, i)
start_point = c(5,7)
rep(".",start_point)
higher_score_finder <- function(s1,s2,l1,l2){
my_best_score = -1
for (i in seq(length(s1))){
z <- calculate_score(s1, s2, l1, l2, i)
if (z > my_best_score){
#my_best_align = paste(paste(rep(".",i),sep = ""), s2, sep = "") # think about what this is doing!
my_best_score = z
start_point = i
#print (my_best_align)
}else if (z == my_best_score){ # You may find multiple result that have the same match score, you need to output all
my_best_score = z # still identical
start_point = c(i, start_point)
}
}
print ("=====================Results of alignment=====================")
print(paste("Best score:", my_best_score))
seq1 = paste(s1, collapse = "")
seq2 = paste(s2, collapse = "")
my_best_align = list()
for (i in seq(length(start_point))){
my_best_align[[i]] = paste(paste(rep(".",point), collapse = ""), seq2 , sep = "")
}
print(seq1)
print(my_best_align)
return(list(my_best_score = my_best_score, start_point = start_point, best_align = my_best_align))
}
main1 <- function(){
seq_list <- read.csv("../document/case3/align_seq_data.csv",header = F) # Read the length
seq1 = seq_list[2,2]
seq2 = seq_list[3,2]
prepare <- identify_the_shorter_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
}
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
start_point[i]
higher_score_finder <- function(s1,s2,l1,l2){
my_best_score = -1
for (i in seq(length(s1))){
z <- calculate_score(s1, s2, l1, l2, i)
if (z > my_best_score){
#my_best_align = paste(paste(rep(".",i),sep = ""), s2, sep = "") # think about what this is doing!
my_best_score = z
start_point = i
#print (my_best_align)
}else if (z == my_best_score){ # You may find multiple result that have the same match score, you need to output all
my_best_score = z # still identical
start_point = c(i, start_point)
}
}
print ("=====================Results of alignment=====================")
print(paste("Best score:", my_best_score))
seq1 = paste(s1, collapse = "")
seq2 = paste(s2, collapse = "")
my_best_align = list()
for (i in seq(length(start_point))){
point = start_point[i]
my_best_align[[i]] = paste(paste(rep(".",point), collapse = ""), seq2 , sep = "")
}
print(seq1)
print(my_best_align)
return(list(my_best_score = my_best_score, start_point = start_point, best_align = my_best_align))
}
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
res.align
seq_list <- read.csv("../document/case3/align_seq_data.csv",header = F) # Read the length
seq1 = seq_list[2,2]
seq2 = seq_list[3,2]
seq_list[2,2]
seq1 = seq_list[1,2]
seq2 = seq_list[2,2]
seq1
seq_list <- read.csv("../document/case3/align_seq_data.csv",header = F) # Read the length
seq1 = seq_list[1,2]
seq2 = seq_list[2,2]
prepare <- identify_the_shorter_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
seq1 = seq_list[1,2]
seq2 = seq_list[3,2]
prepare <- identify_the_shorter_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
seq1 = seq_list[1,2]
seq2 = seq_list[2,2]
prepare <- identify_the_shorter_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
seq1 = seq_list[1,2]
seq2 = seq_list[4,2]
prepare <- identify_the_shorter_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
seq1 = seq_list[2,2]
seq2 = seq_list[3,2]
prepare <- identify_the_shorter_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
seq1 = seq_list[1,2]
seq2 = seq_list[3,2]
prepare <- identify_the_shorter_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
seq1
seq1 = seq_list[1,2]
seq2 = seq_list[3,2]
prepare <- identify_the_shorter_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
seq_list <- read.csv("../document/case3/align_seq_data.csv",header = F) # Read the length
seq1 = seq_list[1,2]
seq2 = seq_list[3,2]
seq1
seq2 = seq_list[3,2]
seq2
prepare <- identify_the_shorter_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
View(seq_list)
source("~/Documents/MyTutorial/StartYourRJourney/code/align_seq.R", echo=TRUE)
main1()
calculate_score <- function(s1, s2, l1, l2, startpoint){
startpoint_seq <- paste(rep(".",startpoint), collapse = "")
matched <- paste(paste(s1, collapse = ""),"\n",startpoint_seq, sep = "")
score <- 0
for (i in seq(length(s2))){
if (i + startpoint  <= l1){
if (s1[i + startpoint] == s2[i]){# if the bases match
matched = paste(matched,s2[i],sep = "")
score = score + 1
}else{
matched = paste(matched,"-",sep = "")
}
}
}
cat(matched,fill = T)
return(score)
}
higher_score_finder <- function(s1,s2,l1,l2){
my_best_score = -1
for (i in seq(length(s1))){
z <- calculate_score(s1, s2, l1, l2, i)
if (z > my_best_score){
#my_best_align = paste(paste(rep(".",i),sep = ""), s2, sep = "") # think about what this is doing!
my_best_score = z
start_point = i
#print (my_best_align)
}else if (z == my_best_score){ # You may find multiple result that have the same match score, you need to output all
my_best_score = z            # still identical
start_point = c(i, start_point)
}
}
print ("=====================Results of alignment=====================")
print(paste("Best score:", my_best_score))
print(paste("We have", length(start_point) , "best matches"))
seq1 = paste(s1, collapse = "")
seq2 = paste(s2, collapse = "")
my_best_align = list()
for (i in seq(length(start_point))){
point = start_point[i]
my_best_align[[i]] = paste(paste(rep(".",point), collapse = ""), seq2 , sep = "")
}
print(seq1)
print(my_best_align)
return(list(my_best_score = my_best_score, start_point = start_point, best_align = my_best_align))
}
main1 <- function(){
seq_list <- read.csv("../document/case3/align_seq_data.csv",header = F) # Read the length
# seq4 and seq 2
seq1 = seq_list[1,2]
seq2 = seq_list[3,2]
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
}
main1()
main1 <- function(){
seq_list <- read.csv("../document/case3/align_seq_data.csv",header = F) # Read the length
# seq4 and seq 2
seq1 = seq_list[1,2]
seq2 = seq_list[3,2]
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
}
main1()
higher_score_finder <- function(s1,s2,l1,l2){
my_best_score = -1
for (i in seq(length(s1))){
z <- calculate_score(s1, s2, l1, l2, i)
if (z > my_best_score){
#my_best_align = paste(paste(rep(".",i),sep = ""), s2, sep = "") # think about what this is doing!
my_best_score = z
start_point = i
#print (my_best_align)
}else if (z == my_best_score){ # You may find multiple result that have the same match score, you need to output all
my_best_score = z            # still identical
start_point = c(i, start_point)
}
}
print ("=====================Results of alignment=====================")
print(paste("Best score:", my_best_score))
print(paste("We have", length(start_point) , "best matches"))
seq1 = paste(s1, collapse = "")
seq2 = paste(s2, collapse = "")
my_best_align = list()
for (i in seq(length(start_point))){
point = start_point[i]
my_best_align[[i]] = paste(paste(rep(".",point), collapse = ""), seq2 , sep = "")
}
print("==== Template sequence ====")
print(seq1)
print(my_best_align)
return(list(my_best_score = my_best_score, start_point = start_point, best_align = my_best_align))
}
main1 <- function(){
seq_list <- read.csv("../document/case3/align_seq_data.csv",header = F) # Read the length
# seq4 and seq 2
seq1 = seq_list[1,2]
seq2 = seq_list[3,2]
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
}
main1()
higher_score_finder <- function(s1,s2,l1,l2){
my_best_score = -1
for (i in seq(length(s1))){
z <- calculate_score(s1, s2, l1, l2, i)
if (z > my_best_score){
#my_best_align = paste(paste(rep(".",i),sep = ""), s2, sep = "") # think about what this is doing!
my_best_score = z
start_point = i
#print (my_best_align)
}else if (z == my_best_score){ # You may find multiple result that have the same match score, you need to output all
my_best_score = z            # still identical
start_point = c(i, start_point)
}
}
print ("=====================Results of alignment=====================")
print(paste("Best score:", my_best_score))
print(paste("We have", length(start_point) , "best matches"))
seq1 = paste(s1, collapse = "")
seq2 = paste(s2, collapse = "")
my_best_align = list()
for (i in seq(length(start_point))){
point = start_point[i]
my_best_align[[paste("match", i)]] = paste(paste(rep(".",point), collapse = ""), seq2 , sep = "")
}
print("==== Template sequence ====")
print(seq1)
print(my_best_align)
return(list(my_best_score = my_best_score, start_point = start_point, best_align = my_best_align))
}
main1 <- function(){
seq_list <- read.csv("../document/case3/align_seq_data.csv",header = F) # Read the length
# seq4 and seq 2
seq1 = seq_list[1,2]
seq2 = seq_list[3,2]
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
}
main1()
source("~/Documents/MyTutorial/StartYourRJourney/code/align_seq.R", echo=TRUE)
seq_list[1,1]
seq_list <- read.csv("../document/case3/align_seq_data.csv",header = F) # Read the length
seq_list[1,1]
seq_list[3,1]
seq_list[2,1]
# seq4 and seq 2
seq1 = seq_list[1,2]
seq2 = seq_list[2,2]
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
# seq4 and seq 2
seq1 = seq_list[3,2]
seq2 = seq_list[4,2]
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
# seq4 and seq 2
seq1 = seq_list[2,2]
seq2 = seq_list[3,2]
seq1
seq2
main2 <- function(){
seq_list <- read.csv("../document/case3/align_seq_data.csv",header = F) # Read the length
# seq4 and seq 2
seq1 = seq_list[2,2]
seq2 = seq_list[3,2]
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
}
main2()
main2 <- function(){
seq_list <- read.csv("../document/case3/align_seq_data.csv",header = F) # Read the length
# seq4 and seq 2
seq1 = seq_list[1,2]
seq2 = seq_list[3,2]
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
}
main2()
seq_list <- read.csv("../document/case3/align_seq_data.csv",header = F) # Read the length
# seq4 and seq 2
seq1 = seq_list[1,2]
seq2 = seq_list[2,2]
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
seq_list <- read.csv("../document/case3/align_seq_data.csv",header = F) # Read the length
# seq4 and seq 2
seq1 = seq_list[2,2]
seq2 = seq_list[4,2]
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
main2 <- function(){
seq_list <- read.csv("../document/case3/align_seq_data.csv",header = F) # Read the length
# seq4 and seq 2
seq1 = seq_list[2,2]
seq2 = seq_list[4,2]
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
}
main2()
seq1 = readLines("../document/case5/bacteria1.fa")
seq1
seq2 = readLines("../document/case5/E.coli.fa")[2]
seq1 = readLines("../document/case5/bacteria1.fa")[2]
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
source("~/Documents/MyTutorial/StartYourRJourney/code/align_seq.R", echo=TRUE)
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
length(seq2)
nchar(seq2)
seq2 = readLines("../document/case5/E.coli.fa")[2]
seq2 = readLines("../document/case5/E.coli.fa")
seq2
seq2 = readLines("../document/case5/E.coli.fa")[-1]
seq2[1]
seq2[0]
seq2[2]
seq2 = paste(seq2,collapse = "")
seq2
head(seq2)
seq2[2]
seq2[1]
seq1 = readLines("../document/case5/bacteria1.fa")[2]
seq2 = readLines("../document/case5/bacteria_ref.fa")[2]
seq2
readLines("../document/case5/bacteria_ref.fa")
seq2 = readLines("../document/case5/bacteria_ref.fa")[2]
seq2
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
length(seq1)
nchar(seq1)
nchar(seq2)
seq1 = readLines("../document/case5/bacteria2.fa")[2]
prepare <- identify_the_seq(seq1 = seq1, seq2 = seq2)
res.align = higher_score_finder(s1 = prepare$longer_seq,
s2 = prepare$shorter_seq,
l1 = prepare$longer_length,
l2 = prepare$shorter_length)
length(seq1)
nchar(seq2)
nchar(seq1)
